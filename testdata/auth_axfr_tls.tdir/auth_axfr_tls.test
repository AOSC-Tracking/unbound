# #-- auth_axfr_tls.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test

. ../common.sh
PRE="../.."
# do the test
echo "> dig www.example.com."
dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
# try again if it needs time to do the zone transfer.
if grep SERVFAIL outfile; then
	echo "> try again"
	dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
fi
if grep SERVFAIL outfile; then
	echo "> try again"
	sleep 1
	dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
fi
if grep SERVFAIL outfile; then
	echo "> try again"
	sleep 1
	dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
fi
if grep SERVFAIL outfile; then
	echo "> try again"
	sleep 1
	dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
fi
echo "> check answer"
if grep "1.2.3.4" outfile; then
	echo "OK"
else
	echo "Not OK"
	exit 1
fi

# update the zone
mv example.com.zone example.com.zone.old
mv example.com.zone2 example.com.zone
touch example.com.zone
kill -1 $AUTH_PID
#it would need to wait for the line to appear twice.
#wait_server_up nsd.log "zone example.com read with success"
echo "> auth server updated"

echo "> dig www.example.com."
dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
# try again if it needs time to do the zone transfer.
if grep SERVFAIL outfile || grep "1.2.3.4" outfile; then
	echo "> try again"
	dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
fi
if grep SERVFAIL outfile || grep "1.2.3.4" outfile; then
	echo "> try again"
	sleep 1
	dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
fi
if grep SERVFAIL outfile || grep "1.2.3.4" outfile; then
	echo "> try again"
	sleep 1
	dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
fi
if grep SERVFAIL outfile || grep "1.2.3.4" outfile; then
	echo "> try again"
	sleep 1
	dig @localhost -p $UNBOUND_PORT www.example.com. | tee outfile
fi
echo "> check answer"
if grep "1.2.3.5" outfile; then
	echo "OK"
else
	echo "Not OK"
	exit 1
fi

if grep "auth zone example.com. soa probe sent to 127.0.0.1#unbound" unbound.log; then
	echo "SOA sent over TLS"
else
	echo "SOA not sent over TLS"
	echo "Not OK"
	exit 1
fi

exit 0
