# #-- svcb.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test

. ../common.sh
get_random_port 2
UNBOUND_PORT=$RND_PORT
FWD_PORT=$(($RND_PORT + 1))
echo "UNBOUND_PORT=$UNBOUND_PORT" >> .tpkg.var.test
echo "FWD_PORT=$FWD_PORT" >> .tpkg.var.test

# rewrite config file with created ports
sed -e 's/@PORT\@/'$UNBOUND_PORT'/' < ede.conf > ub.conf

# start unbound in the background
PRE="../.."
$PRE/unbound -d -c ub.conf > unbound.log 2>&1 &
UNBOUND_PID=$!
echo "UNBOUND_PID=$UNBOUND_PID" >> .tpkg.var.test


# query with bad edns keepalive
dig @127.0.0.1 -p $UNBOUND_PORT +tcp +ednsopt=11:010203 > keepalive.txt

# refused nonrec (cache snoop) (Not Auth)
dig @127.0.0.1 -p $UNBOUND_PORT +norec > snoop.text

# @TODO dnssec bogus local zones something
dig @127.0.0.1 qwerqwer.hopsa.kidee. TXT +dnssec > bogus.txt

# refused, not auth ???


# DNAME expansion
# @TODO do we have this?


# RPZ DNAME expansion too long
dig @127.0.0.1 -p $UNBOUND_PORT www.qhqwer.qwer.qwer.h.example.com A > dname_expansion.txt

if ! grep -q "OPT=15: 00 00 44 4e 41 4d 45 20 65 78 70 61 6e 73 69 6f 6e 20 62 65 63 61 6d 65 20 74 6f 6f 20 6c 61 72 67 65" dname_expansion.txt
then
	echo "No DNAME expansion for CNAME EDE message"
	exit 1
fi

# RPZ always_null gets EDE forged
dig @127.0.0.1 -p $UNBOUND_PORT uva.nl A > always_null_forged.txt

if ! grep -q "OPT=15: 00 04" always_null_forged.txt
then
	echo "local-zone always_null must have EDE forged code"
	exit 1
fi

# RPZ always_refuse
dig @127.0.0.1 -p $UNBOUND_PORT hopsa.kidee. A > always_refuse_forged.txt

if ! grep -q "OPT=15: 00 04" always_refuse_forged.txt
then
	echo "local-zone always_null must have EDE blocked code"
	exit 1
fi

dig @localhost hopsa.kidee. A


# teardown
kill_pid $UNBOUND_PID